# $Id: screen-keys.conf,v 1.7 2010/07/31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

#***************
# Start TPM
#
# We do this first so we can override
#***************
# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'rlpowell/tmux-newline-detector'
set -g @plugin 'tmux-plugins/tmux-logging'
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell "${HOME}/.tmux/plugins/tpm/tpm"
#***************
# End TPM
#***************

# Set the prefix to ^T.
unbind C-b
set -g prefix ^T
bind t send-prefix

# Stop being in a weird place
# set-option -g default-path "${HOME}"

# Better colors
set -g default-terminal "screen-256color"

# Trimmed wrap for use with irssi and such
unbind w
bind w run-shell "~/bin/ws_trim_wrap ' '"
unbind W
bind W run-shell "~/bin/ws_trim_wrap ''"

# Status line tweaks to support directory inclusion
set-option -g status-left '#[bg=magenta]#I:#T                                                            #[default]'
set-option -g status-left-length 60
set-option -g status-right '#[bg=cyan] #W -- #I #[default]'

# various buffer join options
unbind j
bind j paste-buffer -p -s ' '
unbind J
bind J paste-buffer -p -s ''
unbind ]
bind-key ] run-shell "~/.tmux/plugins/tmux-newline-detector/scripts/paste.sh -p"
bind-key = choose-buffer "run-shell '~/.tmux/plugins/tmux-newline-detector/scripts/paste.sh -p -b %%'"

# Windows > 9

# basic settings
set-window-option -g mode-keys vi # vi key
set-option -g status-keys vi
set-option -g history-limit 50000
set-window-option -g alternate-screen off # More backscroll
#set-window-option -g mode-mouse off # disable mouse
set-option -g bell-on-alert on
set-option -g bell-action any

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Bind appropriate commands similar to screen.
# lockscreen ^X x
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^T
unbind ^T
bind ^T last-window

# prev ^H ^P p ^?
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w
unbind ^W
bind ^W list-windows
# unbind w
# bind w list-windows

# quit \
#unbind \\
#bind \ confirm-before "kill-server"

# kill K k
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split -v |
unbind |
bind | split-window

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window
